{"meta":{"title":"G's Blog","subtitle":"wasd11203","description":null,"author":"G","url":"http://www.gzglvcj.cn"},"pages":[],"posts":[{"title":"","slug":"CentOS_7_搭建_LNMP_环境","date":"2017-06-26T01:48:33.778Z","updated":"2017-06-26T01:48:06.000Z","comments":true,"path":"2017/06/26/CentOS_7_搭建_LNMP_环境/","link":"","permalink":"http://www.gzglvcj.cn/2017/06/26/CentOS_7_搭建_LNMP_环境/","excerpt":"","text":"CentOS 7 搭建 LNMP 环境搭建环境使用的是 在VM 中 新安装的CentOS 系统。 依赖安装 安装 Nginx 需要的依赖： -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel openssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers```12342. 安装 PHP 需要的依赖： ```yum install -y php php-mysql php-gd libjpeg* php-imap php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-mcrypt php-bcmath php-mhash libmcrypt libmcrypt-devel php-fpm 软件离线包 PHP 7 离线包 Nginx 离线包 安装步骤安装Nginx与PHP 离线包 将上述依赖安装好之后。 使用命令–mkdir 新建一个software文件夹，完成之后 使用命令– cd 进入到该文件夹中 使用命令–rz 将软件离线包 上传到software文件夹中，完成之后，使用命令–ll 可以在看到上传的软件包 在software 文件夹中使用tar -zvxf filename 分别对两个离线包解压，解压完成后在该文件夹中可以看到两个文件夹分别对应两个软件 进入 nginx-1.11.9 文件夹中使用命令– ./configure 软件进行配置检测，完成之后，执行make &amp; make install 命令即可进行编译安装 完成nginx 安装后,退出 nginx-1.11.9 文件夹，然后进入php-7.1.5 文件夹，使用./configure 命令进行配置检测，完成之后同样执行 make &amp; make install 命令编译安装 ​ 安装完成后，需要暂时关闭防火墙(其实只需要开放端口即可，但是暂时直接关闭防火墙简单粗暴，在搭建完成之后，再进行防火墙的配置)命令：systemctl stop firewalld.service – 关闭防火墙 通过ip直接访问即可获取默认的页面 配置 PHP 进入 PHP 离线包所在的文件夹 software ，进入 php-7.1.5 文件夹，将 php.ini-development 或者 php.ini-production 两个文件中的任何一个拷贝到 /user/local/php/ 目录下，并重命名为 php.ini 进入/etc/php-fpm.d/目录下。修改该目录下的www.conf 文件，找到 = apache与group=apache```1将其修改为```user = nginx group = nginx 使用命令 groupadd nginx 创建用户组之后使用 useradd -g nginx nginx 在nginx 组中添加nginx用户 配置 php 的环境变量：找到 /etc/ 目录下profile 文件，在该文件下追加，```export PATH```两行代码，保存后，执行命令--sourcelink12345 即可。5. 启动php-fpm : 进入/usr/sbin/ 目录，执行 php-fpm 即可启动php解释器 ### 配置 Nginx 支持PHP1. 将下列默认屏蔽的代码释放屏蔽。之后去掉默认的location /&#123;&#125; 中的root ,在 location 外写一个root 为根目录,重新启动ng即可 location ~ \\.php$ { fastcgi_index index.php; fastcgi_pass 127.0.0.1:9000; include fastcgi_params; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; }``` 完成nginx 支持PHP。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2017-03-14T07:18:12.241Z","updated":"2017-03-14T07:18:12.241Z","comments":true,"path":"2017/03/14/hello-world/","link":"","permalink":"http://www.gzglvcj.cn/2017/03/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}